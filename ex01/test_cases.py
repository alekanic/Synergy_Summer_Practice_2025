#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Тестовые примеры для программы анализа одномерного массива.
"""

from main import analyze_positive_elements


def run_test_case(test_name, arr, expected_sum, expected_count):
    """
    Запускает тестовый пример и выводит результат.
    
    Args:
        test_name (str): Название теста
        arr (list): Тестовый массив
        expected_sum (float): Ожидаемая сумма положительных элементов
        expected_count (int): Ожидаемое количество положительных элементов
    """
    print(f"\n{'='*60}")
    print(f"ТЕСТ: {test_name}")
    print(f"{'='*60}")
    print(f"Исходный массив: {arr}")
    print(f"Размерность: {len(arr)}")
    
    # Выполнение анализа
    actual_sum, actual_count = analyze_positive_elements(arr)
    
    # Проверка результатов
    sum_correct = abs(actual_sum - expected_sum) < 0.001  # Учитываем погрешность для float
    count_correct = actual_count == expected_count
    
    print(f"Ожидаемая сумма: {expected_sum}")
    print(f"Полученная сумма: {actual_sum}")
    print(f"Ожидаемое количество: {expected_count}")
    print(f"Полученное количество: {actual_count}")
    
    if sum_correct and count_correct:
        print("✅ ТЕСТ ПРОЙДЕН")
    else:
        print("❌ ТЕСТ ПРОВАЛЕН")
        if not sum_correct:
            print(f"   Ошибка в сумме: ожидалось {expected_sum}, получено {actual_sum}")
        if not count_correct:
            print(f"   Ошибка в количестве: ожидалось {expected_count}, получено {actual_count}")


def main():
    """
    Запускает все тестовые примеры.
    """
    print("ТЕСТИРОВАНИЕ ПРОГРАММЫ АНАЛИЗА МАССИВА")
    print("Покрытие всех ветвей алгоритма")
    
    # Тест 1: Все элементы положительные (основная ветвь)
    run_test_case(
        "Все элементы положительные",
        [1.5, 2.3, 4.7, 8.1, 3.2],
        19.8,
        5
    )
    
    # Тест 2: Смешанные элементы (ветвь с отрицательными элементами)
    run_test_case(
        "Смешанные положительные и отрицательные элементы",
        [1.5, -2.3, 4.7, -8.1, 3.2, -1.0, 6.8],
        16.2,
        4
    )
    
    # Тест 3: Элементы с нулями (ветвь с нулевыми элементами)
    run_test_case(
        "Элементы с нулевыми значениями",
        [0, 1.5, 0, -2.3, 4.7, 0, 3.2],
        9.4,
        3
    )
    
    # Тест 4: Пустой массив (ветвь пустого массива)
    run_test_case(
        "Пустой массив",
        [],
        0,
        0
    )
    
    # Тест 5: Без положительных элементов (ветвь без положительных элементов)
    run_test_case(
        "Без положительных элементов",
        [-1.5, -2.3, -4.7, -8.1, -3.2, 0],
        0,
        0
    )
    
    # Тест 6: Только нули
    run_test_case(
        "Только нулевые элементы",
        [0, 0, 0, 0, 0],
        0,
        0
    )
    
    # Тест 7: Один положительный элемент
    run_test_case(
        "Один положительный элемент",
        [42.5],
        42.5,
        1
    )
    
    # Тест 8: Большой массив с повторяющимися элементами
    run_test_case(
        "Большой массив с повторениями",
        [1, -1, 2, -2, 3, -3, 4, -4, 5, -5, 0, 0, 0],
        15,
        5
    )
    
    # Тест 9: Дробные числа
    run_test_case(
        "Дробные числа",
        [0.1, -0.1, 0.5, -0.5, 1.0, -1.0, 2.5, -2.5],
        4.1,
        4
    )
    
    # Тест 10: Граничные случаи
    run_test_case(
        "Граничные случаи (очень маленькие положительные числа)",
        [0.0001, -0.0001, 0.001, -0.001, 0.01, -0.01],
        0.0111,
        3
    )
    
    print(f"\n{'='*60}")
    print("ТЕСТИРОВАНИЕ ЗАВЕРШЕНО")
    print(f"{'='*60}")


if __name__ == "__main__":
    main() 